template<class T>
struct cum_sum_linear{
    int n;
    vector<T> x,a,b;
    cum_sum_linear(int n_ = 0) : n(n_), x(n), a(n+1), b(n+1){}

    // 区間[l,r)に対して、
    // x_l += c , x_l+1 += c + d , x_l+2 = c + 2*d, x_l+r = c + (r-l)*d
    // を加算する
    void add(int l,int r, T c, T d){
        a[l] += c; a[r] -= c;
        a[l] -= d*l; a[r] += d*l;
        b[l] += d; b[r] -= d;
    }
    void fix(){
        for(int i = 0; i < n;i++){
            x[i] = a[i] + b[i]*i;
            a[i+1] += a[i];
            b[i+1] += b[i];
        }
    }
    T operator[](int i) const { return x[i]; }
};



// verified : ARC077 https://atcoder.jp/contests/arc077/tasks/arc077_c
template<class Type>
Type solve(Type res = Type()){
    int n,m; cin >> n >> m;
    vector<ll> a(n); for(auto& in:a) cin >> in;

    ll sum = 0;
    cum_sum_linear<ll> x(2*m+1);
    for(int i = 1; i < n;i++){
        ll l = a[i-1], r = a[i];
        if(r < l) r += m;

        sum += r-l;

        x.add(l+1,r+1,0,1);
    }
    x.fix();

    res = LINF;
    for(int i = 1; i <= m;i++){
        res = min(res,sum - x[i] - x[i+m]);
    }

    return res;
}
int main(void) {
    cin.tie(0); ios::sync_with_stdio(false);
    //solve<ll>(0);
    cout << fixed << setprecision(12) << solve<ll>() << endl;
    return 0;
}
