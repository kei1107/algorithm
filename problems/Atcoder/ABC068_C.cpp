#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int INF = 1e9;
const ll LINF = 1e18;

/*
<url:https://arc068.contest.atcoder.jp/tasks/arc068_a?lang=en>
問題文============================================================
 すぬけくんは 6 面サイコロで遊ぶことにしました。
 サイコロは 1 から 6 までの整数がそれぞれの面に書かれており、向かい合う面に書かれた数の和はどれも 7 です。
 
 すぬけくんはサイコロの好きな面が上向きになるように置いたのち何回か以下の操作を行います。
 
 操作：サイコロを手前、奥、左、右のどれかの方向に 90° だけ回転させる。
 その後、上を向いている面に書かれた数を y として y 点得る。
 例えば、図のように 1 と書かれた面が上を向いており、手前側の面に 5 が、右側の面に 4 が書かれている状況を考えます。
 図に示されるように右方向に回転させることで 3 と書かれた面が上を向くようにすることが可能です。
 その他、左方向に回転させた場合は 4 と書かれた面が、手前方向に回転させた場合は 2 と書かれた面が、
 奥方向に回転させた場合は 5 と書かれた面が上を向くようにすることが可能です。

=================================================================

解説=============================================================

 最適な操作は サイコロの面を 6,5,6,5,6,5,6,5... と動かした場合である。
 よってこのパターンでシミュレーションすれば良い
 
================================================================
*/
int main(void) {
	cin.tie(0); ios::sync_with_stdio(false);
    ll x; cin >> x;
    ll s = max(0LL,x/11 - 10);
    ll ans = 2*s;
    ll now = s*11;
    
    int add = 6;
    while(now < x){
        now+=add; ans++;
        if(add == 6) add =5;
        else add = 6;
    }
    cout << ans << endl;
	return 0;
}
