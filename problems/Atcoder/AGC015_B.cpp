#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int INF = 1e9;
const ll LINF = 1e18;

/*
<url:https://agc015.contest.atcoder.jp/tasks/agc015_b>
問題文============================================================
 すけぬ君は、N 階建てのビルを建てました。ビルにはエレベーターが 1 基あり、すべての階に止まります。
 
 すけぬ君は、各階に上下の方向ボタンを設置しましたが、うっかりしていたため、
 どの階にも上向きか下向きの片方のボタンしかありません。
 
 そのため、どの階からも上か下のどちらかにしか進むことができません。
 Si が U のとき i 階には上向きのボタンしかなく、上にしか進めないことを、D のとき下向きのボタンしかなく、
 下にしか進めないことを表します。
 
 ある階から目的の階へと移動したい住民は、
 仕方がないので必要があれば他の階を経由して目的の階へと向かうことにしました。
 全ての階の順序対 (i,j) についての、i 階から j 階へ行くときのエレベーターに乗る回数の最小値の合計を求めてください。
 
=================================================================

解説=============================================================
1-index
 i階が Uの時 他の全ての階に行くために乗るエレベータの総数は 2*(i-1) + (N - i)
      Dの時                                       2*(N-i) + (i-1)
 
 となるので、その総和を数えれば良い
 
================================================================
*/
int main(void) {
	cin.tie(0); ios::sync_with_stdio(false);
    string S; cin >> S;
    ll ans = 0;
    for(int i = 0; i < (int)S.length();i++){
        if(S[i] == 'U'){
            ans += 2*i + (S.length() - i - 1);
        }else{
            ans += 2*(S.length()-i-1) + i;
        }
    }
    cout << ans << endl;
	return 0;
}
