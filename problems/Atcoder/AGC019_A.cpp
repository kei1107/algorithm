#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int INF = 1e9;
const ll LINF = 1e18;

/*
<url:https://agc019.contest.atcoder.jp/tasks/agc019_a>
問題文============================================================
 あなたは行きつけの店、インフバリューにアイスティーを買いに来ています。
 
 この店では、様々なサイズのボトル入りアイスティーが様々な価格で売られています。
 具体的な価格は、0.25 リットルサイズが一つ Q 円、0.5 リットルサイズが一つ H 円、
 1 リットルサイズが一つ S 円、2 リットルサイズが一つ D 円です。各サイズの在庫は無限にあります。
 
 あなたはちょうど N リットルのアイスティーを買いたいです。これに必要な金額は何円でしょうか？
 
 ちょうど N リットルのアイスティーを買うのに必要な最小の金額を出力せよ。
=================================================================

解説=============================================================

 現在購入すべきリットル数により、購入の可能性のあるサイズにおいて、
 どれをまとめて買うと安いかどうかを決定して、購入していけばいい。
 まとめて買った時の最適なサイズはリットル数を一定にした時に一番小さい金額になるものである
 
================================================================
*/
int main(void) {
	cin.tie(0); ios::sync_with_stdio(false);
    ll Q,H,S,D; cin >> Q >> H >> S >> D;
    ll N; cin >> N; N*= 4; // Q 1l, H 2l, S 4l, D 8l
    ll Ans = 0;
    if(N >= 8){
        ll M = min({8*Q,4*H,2*S,D});
        Ans += N/8*M;
        N -= N/8*8;
    }
    if(N >= 4){
        ll M = min({4*Q,2*H,S});
        Ans += N/4*M;
        N -= N/4*4;
    }
    if(N >= 2){
        ll M = min({2*Q,H});
        Ans += N/2*M;
        N -= N/2*2;
    }
    Ans += N*Q;
    cout << Ans << endl;
	return 0;
}
