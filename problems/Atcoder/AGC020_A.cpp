#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int INF = 1e9;
const ll LINF = 1e18;

/*
<url:https://agc020.contest.atcoder.jp/tasks/agc020_a>
問題文============================================================
 N 個のマスに区切られた細長い紙切れの上でゲームを行います。マスには 1 から N までの番号が順に付けられています。
 
 アリスの駒はマス A に、ボリスの駒は別のマス B に置かれています。
 
 二人にはターンが交互に訪れます。アリスが先手です。
 ターンが回ってきたプレイヤーは、
 自分の駒を現在のマス X から左隣のマス X−1 か右隣のマス X+1 のどちらかに動かさなければなりません。
 ただし、駒を紙切れの外に出したり、相手の駒と同じマスに動かしてはいけません。
 また、駒の移動は一ターンに一度だけ行わなければなりません。
 
 駒を動かせなくなった人が負けで、相手の勝ちとなります。
 
 二人とも、勝ちたいと思っています。二人とも最適にプレイするとき、どちらが勝つでしょうか？
=================================================================

解説=============================================================

 アリスとボリスのマスの位置の差が偶数ならば　アリスが
 そうでなければ                        ボリスがかつ
 
================================================================
*/
int main(void) {
	cin.tie(0); ios::sync_with_stdio(false);
    ll N,A,B; cin >> N >> A >> B;
    if(abs(A-B)%2 != 0){
        cout<< "Borys" << endl;
    }else{
        cout << "Alice" << endl;
    }
	return 0;
}
