#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int INF = 1e9;
const ll LINF = 1e18;

/*
<url:https://arc064.contest.atcoder.jp/tasks/arc064_b>
問題文============================================================
 長さ 3 以上の文字列 s があります。 s の中に同一の文字が隣り合う箇所はありません。
 
 高橋君と青木君がゲームで勝負します。 二人は交互に次の操作を行います。 高橋君が先手です。
 
 s から両端以外の文字をひとつ取り除く。
 ただし、その文字を取り除くことで、s の中に同一の文字が隣り合う箇所ができる場合、その文字を取り除くことはできない。
 先に操作を行えなくなった人が負けです。 二人が最適に行動したとき、どちらが勝つかを判定してください。
=================================================================

解説=============================================================

 いくつかのパターンで実験すると
 最終的に取り除くことができない文字列は
 abacadaeabafa...aza
 といったような形になる
 ここで両端は取り除くことができないので
 両端が同一文字の場合は　奇数長, 異なる文字の場合は 偶数長　の文字列となる
 よって、最初の文字列の偶奇及び両端の文字を見ることによって
 文字列の長さが 偶/奇 => 偶/奇 への変化がわかるので
 先手、後手のどちらで止まるのかがわかる
 
================================================================
*/
void solve(){
    string s; cin >> s;
    cout << ((s.length()%2 == 0)^(s.front() == s.back())?"Second":"First") << endl;
    return;
}
int main(void) {
	cin.tie(0); ios::sync_with_stdio(false);
    solve();
	return 0;
}
