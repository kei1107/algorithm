#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
#define INF 1<<30
#define LINF 1LL<<60

/*
 <url:https://cf17-relay-open.contest.atcoder.jp//tasks/relay2_a>
 問題文============================================================
 ButCoder株式会社 は、プログラミングコンテストサイト「ButCoder」を運営しています。
 このサイトでは、ユーザーにはレーティングという技量を表す整数値が与えられ、
 その値はユーザーがコンテストに参加するたびに変動します。
 新規ユーザーのレーティングの初期値は 0 であり、レーティングが K 以上に達したユーザーは 皆伝 と呼ばれます。
 なお、レーティングは負になることもあります。
 
 低橋くんというユーザーが ButCoder に新たに登録しました。
 彼のレーティングは、彼が奇数回目に参加するコンテスト（1 回目、3 回目、5 回目…）では毎回 A 増加し、
 偶数回目に参加するコンテスト（2 回目、4 回目、6 回目…）では毎回 B 減少することが予測されます。
 
 この予測によると、彼が初めて皆伝になるのは何回のコンテストに参加した直後でしょうか、
 もしくは彼は永遠に皆伝になれないでしょうか？
 =================================================================
 解説=============================================================
 
 A <= B の時
     AがKを超えているならば 1
             いないならば -1
 
 それ以外の時を考える
 
まず、レーティングがKを超える時の式は
 n*A - m*B >= K  (m = n-1, n)
 
 式変形すると
 n*A - (n + x)*B >= K (x = -1,0)
 
 n*(A-B) >= K + x*B
 n >= (K + x*B)/(A-B)
 これを満たす n を求め、実際のコンテスト数に反映した時の最小値を求めればよい
 
 ================================================================
 */

int main(void) {
    cin.tie(0); ios::sync_with_stdio(false);
    ll K,A,B; cin >> K >> A >> B;
    if(A <= B){
        if(K <= A){
            cout << 1 << endl;
        }else{
            cout << -1 << endl;
        }
        return 0;
    }
    ll res = LLONG_MAX;
    for(int i = -1; i <= 0;i++){
        ll cost = B*i;
        ll tmp = (K + cost)/(A-B);
        if((K+cost)%(A-B) != 0) tmp++;
        res = min(res,tmp*2 + i);
    }
    cout << res << endl;
    return 0;
}
