#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int INF = 1e9;
const ll LINF = 1e18;

/*
<url:https://code-thanks-festival-2017-open.contest.atcoder.jp/tasks/code_thanks_festival_2017_e>
問題文============================================================
 これはインタラクティブな問題です。
 
 イルカは街中でコインが入った N 個の袋を見つけました。
 i(1≦i≦N) 番目の袋の中に重さ wi グラムのコインが 10000 枚入っています。
 
 ここで、イルカは街で偽物コインが多く流通していることを思い出しました。
 N 個の袋のうち、いくつかの袋は偽物コインだけが入った袋かもしれません。
 イルカは本物コインの袋を探そうとしています。
 
 これらのコインの見た目は全く同じですが、本物コインと偽物コインでその重さが異なります。
 本物コインの重さは 9 グラム、または 11 グラムであり、
 偽物コインの重さは 8 グラム、10 グラム、または 12 グラムであることが知られています。
 イルカは袋に入っているコインの重さ wi を全く知りません。
 
 イルカは友達のシャチから、はかりを借りることにしました。
 はかりを利用して、コインの計測は以下の手順で行います。
 
 それぞれの袋について、整数 0≦si≦10000(1≦i≦N) を決めます。
 i 番目の袋から si 枚のコインを取り出して、はかりに乗せます。
 その後に計測を行い、はかりの上に乗せたコインの重さの合計を知ることができます。
 最後に、はかりに乗せたコインを元の袋に戻します。
 しかし、シャチはとても忙しいのでイルカは 高々 10 回のコイン計測しかできません。
 どの袋に本物コインが含まれているかを判定してください。
 
 制約
 1≦N≦50
 8≦wi≦12
 N と wi は全て整数

=================================================================

解説=============================================================
 
 試行回数は高々10回で、袋は最大５０個であるから、
 少なくとも一回の試行で５個の袋を判定していきたい
 
 そこで、次のように質問すれば良い
 ? 0 0 0 ... 0 0 0 1 10 100 1000 10000 0 0 0 ... 0 0 0
 
 こうすれば、
 まず、一桁目は、その値が 8,9,0,1,2 であり　判定が可能であり、
 ここで 0,1,2の時、次の位で１の繰り上がりが発生しているので、それを考慮すれば
 9,0,1,2,3 (先に繰り上がり分を引いておけば 8,9,0,1,2）
 のパターンしかないので判定が可能である
 
================================================================
*/
int main(void) {
	cin.tie(0); ios::sync_with_stdio(false);
    int N; cin >> N;
    vector<int> ans(N+1,0);
    for(int i = 1; i <= N;i+=5){
        
        // make query
        cout << "?";
        for(int j = 1; j <= N;j++){
            cout << " ";
            if(i <= j && j < i + 5) {
                cout << pow(10,j-i);
            }else cout << 0;
        }
        cout << endl;
        cout << flush;
        // end query
        
        int ret; cin >> ret;
        for(int j = i; j < min(i+5,N+1);j++){
            if(ret%2 == 0){
                ans[j] = 0;
            }else{
                ans[j] = 1;
            }
            if(ret%10 <= 2) ret -= 10; // carry
            ret /= 10;
        }
    }
    
    cout << "!";
    for(int i = 1; i <= N;i++){
        cout << " " << ans[i];
    }
    cout << endl;
    cout << flush;
    return 0;
}
