#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
#define INF 1<<27
#define LINF 1LL<<60

/*
<url:https://www.ioi-jp.org/joi/2007/2008-yo-prob_and_sol/2008-yo-t6/2008-yo-t6.html>
問題文============================================================
JOI国には，n 島の島があり， 各島には 1 から n までの番号が付けられている．
現在，JOI国では各島の間を結ぶ航路網の整備が進んでいる．

あなたは，船舶の切符を扱っているチケットセンターに勤務している．
JOI国には船舶を使って，できる限り安価に， 島と島の間を旅行したいと考えている人が沢山おり，
彼らは，出発地と目的地を注文票に記入して，あなたのところに送ってくる．
あなたの仕事は，客から注文票を受け取ったらすぐに， いくつかの船舶を乗り継いで，
出発地と目的地を結ぶ航路の中で，もっとも安価な運賃を計算し，客に伝えることである．
ただし，旅程によっては，船舶を使って旅行することが出来ない場合もある．
そのときは『船舶を使って旅行することが出来ない』と客に伝える必要がある．
また，JOI国では，島と島の間を結ぶ新しい船舶が，次々と運航を開始しており，
あなたには，その情報が随時伝えられる． 
客に返事をする際には，最新の情報に留意しなければならない．

入力として，客の注文票や新たに運航を開始した船舶の運航情報が与えられたときに， 客への返事を求めるプログラムを作成せよ．

=================================================================
解説=============================================================
注文or運行情報の更新は合わせて最大5000回、そのうち運行情報の更新は最大1000回
島の数は最大100

各島間の最短距離はワーシャルフロイドで求められる。ただ、単純に運行情報が更新されるたびに
最短距離を更新するとTLEするため、運行情報によって全体の距離に変動が生じるフラグを持ち(既存の時間 > 新情報の時間 ならばtrue)
島間の最短距離を求められたときのみ全体の最短距離を更新する処理を行うと間に合う
================================================================
*/
int main(void) {
	cin.tie(0); ios::sync_with_stdio(false);
	int n, k; cin >> n >> k;
	vector<vector<int>> G(n, vector<int>(n, INF));
	bool update_flag = false;
	for (int i = 0; i < k;i++) {
		int com; cin >> com;
		if (com == 0) {
			int a, b; cin >> a >> b;
			a--; b--;
			if (update_flag) {
				for (int j = 0; j < n;j++) {
					for (int k = 0;k < n;k++) {
						for (int l = 0;l < n;l++) {
							G[k][l] = min(G[k][l], G[k][j] + G[j][l]);
						}
					}
				}
				update_flag = false;
			}
			cout << ((G[a][b] == INF) ? -1 : G[a][b]) << endl;
		}
		else {
			int c, d, e; cin >> c >> d >> e;
			c--; d--;
			if (G[c][d] > e) {
				G[c][d] = G[d][c] = e;
				update_flag = true;
			}
		}
	}
	return 0;
}