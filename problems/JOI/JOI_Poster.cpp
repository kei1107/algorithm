#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
#define INF 1<<30
#define LINF 1LL<<60

/*
<url:https://www.ioi-jp.org/camp/2010/2010-sp-tasks/2010-sp-day1_20.pdf>
問題文============================================================
情報オリンピック日本委員会では，今年の日本情報オリンピック (JOI) の合宿を宣伝するために，
ポスターを作ることになった．JOI のロゴをモチーフにしたポスターが作られた．

ポスターには，2^N × 2^N 個のアルファベットを正方形の形に印刷する．
N >= 1 のときには，2^N × 2^N の正方形を 4 個の 2^(N−1) × 2^(N−1) の正方形に分け，
左上の正方形にはアルファベットの J を，
右上の正方形にはアルファベットの O を，
左下の正方形にはアルファベットの I を印刷する．
また，右下の正方形には，大きさが 2^(N−1) × 2^(N−1) のポスターを印刷する．
N = 0 のときには，アルファベットの J の一文字からなる大きさが 1 × 1 のポスターを印刷する．
以下に，N = 3 の場合の，大きさが 8 × 8 のポスターに印刷するアルファベットを表す．

JJJJOOOO
JJJJOOOO
JJJJOOOO
JJJJOOOO
IIIIJJOO
IIIIJJOO
IIIIIIJO
IIIIIIIJ
N = 3 のポスター

完成したポスターの K 行目に印刷間違いが見つかった．
今年の日本情報オリンピックの合宿はすでに始まっている．再度ポスターの印刷を業者に依頼するには
十分な時間がない．そのため，正しい K 行目をポスターに貼り付けることによって，対応することにした．
=================================================================
解説=============================================================

大きさ2^Nのポスターを考える。
Kが2^(N-1)以下であれば,ポスターの該当部分は2^(N-1)個のJ及び2^(N-1)個のOの文字列である
Kが2^(N-1)より大きければ、ポスターの該当部分は2^(N-1)個のIの文字列及び
大きさ2^(N-1)のポスターの(K - 2^(N-1))行目の部分である。
即ち、最低でもポスターの左半分は確実に決まり、右半分はOもしくは、Nが1小さい、ポスターの
(K - 2^(N-1))行目を確認すればよく、再帰的に考えることができるため。
この通りに文字を復元していけばよい。

最後にN=0の場合の例外処理を挟めばハイ
================================================================
*/
int main(void) {
	cin.tie(0); ios::sync_with_stdio(false);
	int N, K; cin >> N >> K;
	string res;
	while (true) {
		if (N == 0) {
			res += 'J';
			N--;
			break;
		}
		int H = pow(2, N);
		if (H / 2 >= K) {
			res += string(H / 2, 'J') + string(H / 2, 'O');
			break;
		}
		else {
			res += string(H / 2, 'I');
			K -= H / 2;
			N--;
		}
	}
	cout << res << endl;
	return 0;
}