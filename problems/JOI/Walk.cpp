#include "bits/stdc++.h"
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int INF = 1e9;
const ll LINF = 1e16;

/*
 <url:https://www.ioi-jp.org/joi/2008/2009-ho-prob_and_sol/2009-ho.pdf>
 問題文============================================================
 JOI 町に住む太郎君は, ある日,健康増進のために散歩を日課にしようと思い立った.
 太郎君の住む JOI 町には,
 東西方向に走る (H + 1) 本の道路と,
 南北方向に走る (W + 1) 本の道路が碁盤目状に通っている.
 太郎君の家はもっとも北西の 交差点にあり,ここから散歩を開始する.
 
 以降,北から a 番目,西から b 番目の交差点を (a, b) で表す.たとえば,太郎君の家がある交差点は (1, 1) である.
 
 太郎君は,散歩のルートが日々違ったほうが面白いと考えたので,(1, 1) から (H, W) までの H × W 個の交差点に,
 「東」または「南」の文字を書き,次のようなルールに従って毎日散歩を行うことにした.
 
 
 文字の書かれた交差点にいる場合,その交差点に書かれている文字が「東」な ら「南」に,
「南」なら「東」に文字を書き換え,もともと書かれていた文字の方角にある次の交差点まで進む.
 
 もっとも東やもっとも南の道路に到達したら散歩を終了する.
 
 この計画を考えた後,太郎君は,将来の散歩で自分がどのようなルートをたどることになるのかが気になった.
 太郎君のために,太郎君の N 回目の散歩のルートを 予測するプログラムを作成せよ.
 
 =================================================================
 解説=============================================================
 
 考察を進めると、ある交差点にr回到達したとすると、
 その東または南の交差点には r/2 (+1)回進むことがわかる。
 
 よって先にN-1回散歩をした場合において、各交差点がどのように変化するかを確認しておき
 最後にシミュレーションすれば良い
 
 ================================================================
 */
int main(void) {
    cin.tie(0); ios::sync_with_stdio(false);
    int H,W,N; cin >> H >> W >> N;
    vector<vector<int>> masu(H+2,vector<int>(W+2,-1));
    for(int i = 1; i <= H; i++) for(int j = 1; j <= W; j++) cin >> masu[i][j];
    vector<vector<int>> cnt(H+2,vector<int>(W+2,0));
    cnt[1][1] = N - 1;
    for(int i = 1; i <= H;i++){
        for(int j = 1; j <= W;j++){
            cnt[i][j+1] += cnt[i][j]/2; cnt[i+1][j] += cnt[i][j]/2;
            if(masu[i][j]){ cnt[i][j+1] += cnt[i][j]%2;
            }else{ cnt[i+1][j] += cnt[i][j]%2; }
        }
    }
    int h = 1, w = 1;
    while(true){
        if(masu[h][w] == -1) break;
        if((masu[h][w] + cnt[h][w])%2) w++;
        else h++;
    }
    cout << h << " " << w << endl;
    return 0;
}
